# src/keyboards/masterKeyboard.py

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List

from src.models.users.Master import Master
from src.models.Service import Service
from src.utils.messages import ALL_SERVICES

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Å—Ç–µ—Ä–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
ITEMS_PER_PAGE = 8

def create_masters_paginated_keyboard(
    masters: List[Master],
    page: int = 0
) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –º–∞—Å—Ç–µ—Ä–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    """
    builder = InlineKeyboardBuilder()

    # –í—ã—á–∏—Å–ª—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * ITEMS_PER_PAGE
    end_idx = start_idx + ITEMS_PER_PAGE
    page_masters = masters[start_idx:end_idx]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –∏–º–µ–Ω–∞–º–∏ –º–∞—Å—Ç–µ—Ä–æ–≤
    for master in page_masters:
        button_text = f"üë§ {master.name} - {ALL_SERVICES[master.specialization]}"
        builder.add(InlineKeyboardButton(
            text=button_text,
            callback_data=f"master_info:{master.id}"
        ))

    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é, –µ—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π
    total_pages = (len(masters) - 1) // ITEMS_PER_PAGE + 1
    if total_pages > 1:
        navigation_buttons = []

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if page > 0:
            navigation_buttons.append(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ü—Ä–µ–¥",
                callback_data=f"masters_page:{page - 1}"
            ))

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        navigation_buttons.append(InlineKeyboardButton(
            text=f"{page + 1}/{total_pages}",
            callback_data="current_page"
        ))

        # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
        if page < total_pages - 1:
            navigation_buttons.append(InlineKeyboardButton(
                text="–°–ª–µ–¥ ‚û°Ô∏è",
                callback_data=f"masters_page:{page + 1}"
            ))

        builder.row(*navigation_buttons)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    builder.row(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥",
        callback_data="back:main_menu"
    ))

    return builder.as_markup()

def create_master_services_keyboard( master_id: int, services: List[Service]) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —É—Å–ª—É–≥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞.
    """
    builder = InlineKeyboardBuilder()

    for service in services:
        button_text = f"{ALL_SERVICES[service.name]} - {service.price}‚ÇΩ"
        builder.add(InlineKeyboardButton(
            text=button_text,
            callback_data=f"master_service:{master_id}:{service.id}"
        ))

    builder.adjust(1)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∫ —Å–ø–∏—Å–∫—É –º–∞—Å—Ç–µ—Ä–æ–≤
    builder.row(InlineKeyboardButton(
        text="üîô –ö —Å–ø–∏—Å–∫—É –º–∞—Å—Ç–µ—Ä–æ–≤",
        callback_data="back:masters_list"
    ))

    return builder.as_markup()

