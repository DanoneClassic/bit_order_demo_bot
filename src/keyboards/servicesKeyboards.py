import logging

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Tuple

from src.models.Service import Service
from src.utils.messages import SERVICES_CATEGORY, SERVICES, HAIR_SERVICES, COSMETOLOGY, NAILS_SERVICES, \
    HARDWARE_SERVICES, MAKEUP_SERVICES, BROWS_LASHES_SERVICES, SPA_SERVICES, KIDS_SERVICES, ALL_SERVICES

logger = logging.getLogger(__name__)

ITEMS_PER_PAGE = 8


def create_paginated_keyboard(
        items: List[Tuple[str, str]],
        callback_prefix: str,
        page: int = 0,
        back_callback: str = None,
        category_key: str = None  # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()

    # –í—ã—á–∏—Å–ª—è–µ–º –≥—Ä–∞–Ω–∏—Ü—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    start_idx = page * ITEMS_PER_PAGE
    end_idx = start_idx + ITEMS_PER_PAGE
    page_items = items[start_idx:end_idx]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    for text, callback in page_items:
        builder.add(InlineKeyboardButton(
            text=text,
            callback_data=f"{callback_prefix}:{callback}"
        ))

    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –µ—Å–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    total_pages = (len(items) - 1) // ITEMS_PER_PAGE + 1
    if total_pages > 1:
        navigation_buttons = []

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        if page > 0:
            navigation_buttons.append(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ü—Ä–µ–¥",
                callback_data=f"page:{category_key}:{page - 1}"
            ))

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        navigation_buttons.append(InlineKeyboardButton(
            text=f"{page + 1}/{total_pages}",
            callback_data=f"current_page"
        ))

        # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥"
        if page < total_pages - 1:
            navigation_buttons.append(InlineKeyboardButton(
                text="–°–ª–µ–¥ ‚û°Ô∏è",
                callback_data=f"page:{category_key}:{page + 1}"
            ))

        builder.row(*navigation_buttons)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if back_callback:
        builder.add(InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥",
            callback_data=back_callback
        ))

    return builder.as_markup()


def get_category_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ —É—Å–ª—É–≥"""
    builder = InlineKeyboardBuilder()

    for text, callback in SERVICES_CATEGORY:
        builder.add(InlineKeyboardButton(
            text=text,
            callback_data=f"category:{callback}"
        ))

    builder.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥",
        callback_data="back:main_menu"
    ))

    builder.adjust(1)  # –ü–æ –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥ –¥–ª—è –ª—É—á—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    return builder.as_markup()

def get_hair_services_keyboard(page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä—Å–∫–∏—Ö —É—Å–ª—É–≥ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    return create_paginated_keyboard(
        items=HAIR_SERVICES,
        callback_prefix="service:hair",
        page=page,
        back_callback="back:CHOOSE_SERVICE",
        category_key="hair_services"
    )

def get_cosmetology_keyboard(page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —É—Å–ª—É–≥ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    return create_paginated_keyboard(
        items=COSMETOLOGY,
        callback_prefix="service:cosmetology",
        page=page,
        back_callback="back:CHOOSE_SERVICE",
        category_key="cosmetology"
    )

def get_nails_services_keyboard(page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É—Å–ª—É–≥ –Ω–æ–≥—Ç–µ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    return create_paginated_keyboard(
        items=NAILS_SERVICES,
        callback_prefix="service:nails",
        page=page,
        back_callback="back:CHOOSE_SERVICE",
        category_key="nails_services"
    )

def get_hardware_services_keyboard(page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–ø–ø–∞—Ä–∞—Ç–Ω—ã—Ö —É—Å–ª—É–≥ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    return create_paginated_keyboard(
        items=HARDWARE_SERVICES,
        callback_prefix="service:hardware",
        page=page,
        back_callback="back:CHOOSE_SERVICE",
        category_key="hardware_services"
    )

def get_makeup_services_keyboard(page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É—Å–ª—É–≥ –≤–∏–∑–∞–∂–∞ –∏ –º–∞–∫–∏—è–∂–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    return create_paginated_keyboard(
        items=MAKEUP_SERVICES,
        callback_prefix="service:makeup",
        page=page,
        back_callback="back:CHOOSE_SERVICE",
        category_key="makeup_services"
    )

def get_brows_lashes_services_keyboard(page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É—Å–ª—É–≥ –±—Ä–æ–≤–µ–π –∏ —Ä–µ—Å–Ω–∏—Ü —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    return create_paginated_keyboard(
        items=BROWS_LASHES_SERVICES,
        callback_prefix="service:brows_lashes",
        page=page,
        back_callback="back:CHOOSE_SERVICE",
        category_key="brows_lashes_services"
    )

def get_spa_services_keyboard(page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è SPA —É—Å–ª—É–≥ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    return create_paginated_keyboard(
        items=SPA_SERVICES,
        callback_prefix="service:spa",
        page=page,
        back_callback="back:CHOOSE_SERVICE",
        category_key="spa_services"
    )

def get_kids_services_keyboard(page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç—Å–∫–∏—Ö —É—Å–ª—É–≥ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    return create_paginated_keyboard(
        items=KIDS_SERVICES,
        callback_prefix="service:kids",
        page=page,
        back_callback="back:CHOOSE_SERVICE",
        category_key="kids_services"
    )


def get_search_result_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ """


def get_services_keyboard(service: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É—Å–ª—É–≥–∏"""
    builder = InlineKeyboardBuilder()

    for text, callback in SERVICES:
        builder.add(InlineKeyboardButton(
            text=text,
            callback_data=f"service_select:{service}:{callback}"
        ))

    builder.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥",
        callback_data="back:main_menu"
    ))

    builder.adjust(1)
    return builder.as_markup()

def get_booking_confirmation_keyboard(booking_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"""
    builder = InlineKeyboardBuilder()

    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
            callback_data=f"booking:confirm:{booking_id}"
        ),
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data=f"booking:cancel:{booking_id}"
        )
    )

    return builder.as_markup()



def create_search_results_keyboard(services: List[Service], search_query: str, page: int = 0) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    builder = InlineKeyboardBuilder()

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è - 8 —É—Å–ª—É–≥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    items_per_page = 8
    start_idx = page * items_per_page
    end_idx = start_idx + items_per_page
    page_services = services[start_idx:end_idx]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É—Å–ª—É–≥
    for service in page_services:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
        duration = f"{service.duration_minutes} –º–∏–Ω" if service.duration_minutes < 60 else f"{service.duration_minutes // 60}—á {service.duration_minutes % 60}–º" if service.duration_minutes % 60 else f"{service.duration_minutes // 60}—á"

        button_text = f"{ALL_SERVICES[service.name]} ‚Ä¢ {service.price}‚ÇΩ"
        builder.add(InlineKeyboardButton(
            text=button_text,
            callback_data=f"service:search:{service.name}"
        ))

    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –µ—Å–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    total_pages = (len(services) - 1) // items_per_page + 1
    if total_pages > 1:
        navigation_buttons = []

        if page > 0:
            navigation_buttons.append(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ü—Ä–µ–¥",
                callback_data=f"search_page:{search_query}:{page - 1}"
            ))

        navigation_buttons.append(InlineKeyboardButton(
            text=f"{page + 1}/{total_pages}",
            callback_data="current_page"
        ))

        if page < total_pages - 1:
            navigation_buttons.append(InlineKeyboardButton(
                text="–°–ª–µ–¥ ‚û°Ô∏è",
                callback_data=f"search_page:{search_query}:{page + 1}"
            ))

        builder.row(*navigation_buttons)

    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    builder.row(
        InlineKeyboardButton(text="üîç –ù–æ–≤—ã–π –ø–æ–∏—Å–∫", callback_data="MAIN:SEARCH"),
        InlineKeyboardButton(text="üîô –ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data="back:main_menu")
    )

    return builder.as_markup()